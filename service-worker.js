"use strict";var precacheConfig=[["/the-banner-saga-web-map/index.html","45450f667f96e6dae4e0627f96f41a06"],["/the-banner-saga-web-map/static/css/main.afe426c8.css","460c615748a5b88ea9fd9fb5d3743f29"],["/the-banner-saga-web-map/static/js/main.1413abd7.js","793b73d6c714f07d8218d14cbfc57998"],["/the-banner-saga-web-map/static/media/hover_akur.6b7044fc.png","6b7044fc2dbb7c40926c439b765e6ccc"],["/the-banner-saga-web-map/static/media/hover_arberrang.7794ee24.png","7794ee247495b765c61e0539c8547621"],["/the-banner-saga-web-map/static/media/hover_baaharbour.cffebdce.png","cffebdce5b4b5aa09692cedf31b7f0d5"],["/the-banner-saga-web-map/static/media/hover_bindal.eb569a79.png","eb569a79d2b02eefdf05b9fc6486abd3"],["/the-banner-saga-web-map/static/media/hover_blotsbalkr.a2d876d5.png","a2d876d51f184fe8f485a1d5a777ba9f"],["/the-banner-saga-web-map/static/media/hover_dalalond.57f07131.png","57f07131beb93d99cc8342c82c561026"],["/the-banner-saga-web-map/static/media/hover_hraun.593eaa05.png","593eaa056487784b0eed9eeee8941893"],["/the-banner-saga-web-map/static/media/hover_rundwall.c776759e.png","c776759e106ca75c01dced7ffddae601"],["/the-banner-saga-web-map/static/media/hover_setterlund.add03dfb.png","add03dfbce61ae4655d1a9ba4497621c"],["/the-banner-saga-web-map/static/media/hover_stromlund.537f863b.png","537f863bf39e638ab9a475d29e5cc6fb"],["/the-banner-saga-web-map/static/media/hover_swartbog.1babe874.png","1babe8746aed8771bebf53170d785034"],["/the-banner-saga-web-map/static/media/hover_valkajokull.a092015d.png","a092015d9b41e3e650b64ad07dfafeaf"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var n=new URL(e);return"/"===n.pathname.slice(-1)&&(n.pathname+=a),n.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,n,t){var r=new URL(e);return t&&r.pathname.match(t)||(r.search+=(r.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(n)),r.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var n=new URL(a).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,n){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return n.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],n=e[1],t=new URL(a,self.location),r=createCacheKey(t,hashParamName,n,/\.\w{8}\./);return[t.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(t){return setOfCachedUrls(t).then(function(n){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!n.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return t.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var n=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!n.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,n=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),t="index.html";(e=urlsToCacheKeys.has(n))||(n=addDirectoryIndex(n,t),e=urlsToCacheKeys.has(n));var r="/the-banner-saga-web-map/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(n=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(n)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});